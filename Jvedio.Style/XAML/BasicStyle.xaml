<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
>


    <!--动态资源-->
    
    <!--默认黑色皮肤-->
    <Color x:Key="Color_BackgroundTitle"  >#22252A</Color>
    <Color x:Key="Color_BackgroundMain"  >#1B1B1F</Color>
    <Color x:Key="Color_BackgroundSide"  >#101013</Color>
    <Color x:Key="Color_BackgroundTab"  >#383838</Color>
    <Color x:Key="Color_BackgroundSearch"  >#18191B</Color>
    <Color x:Key="Color_BackgroundMenu" >#252526</Color>
    <Color x:Key="Color_ForegroundGlobal"  >#AFAFAF</Color>
    <Color x:Key="Color_ForegroundSearch"  >#FFFFFF</Color>
    <Color x:Key="Color_BorderBursh"  >Transparent</Color>



    <!--白色皮肤-->
    <!--<Color x:Key="Color_BackgroundTitle"  >#E2E3E5</Color>
    <Color x:Key="Color_BackgroundMain"  >#F9F9F9</Color>
    <Color x:Key="Color_BackgroundSide"  >#F2F3F4</Color>
    <Color x:Key="Color_BackgroundTab"  >#FFF5EE</Color>
    <Color x:Key="Color_BackgroundSearch"  >#D1D1D1</Color>
    <Color x:Key="Color_BackgroundMenu" >#FFFFFF</Color>
    <Color x:Key="Color_ForegroundGlobal"  >#555555</Color>
    <Color x:Key="Color_ForegroundSearch"  >#000000</Color>
    <Color x:Key="Color_BorderBursh"  >#CECECE</Color>-->


    <!--Application.Current.Resources["Color_BackgroundTitle"] = (Color)ColorConverter.ConvertFromString("#0B72BD");
                Application.Current.Resources["Color_BackgroundMain"] = (Color)ColorConverter.ConvertFromString("#2BA2D2");
                Application.Current.Resources["Color_BackgroundSide"] = (Color)ColorConverter.ConvertFromString("#61AEDA");
                Application.Current.Resources["Color_BackgroundTab"] = (Color)ColorConverter.ConvertFromString("#3DBEDE");
                Application.Current.Resources["Color_BackgroundSearch"] = (Color)ColorConverter.ConvertFromString("#87CEEB");
                Application.Current.Resources["Color_BackgroundMenu"] = Colors.SkyBlue;
                Application.Current.Resources["Color_ForegroundGlobal"] = Colors.White;
                Application.Current.Resources["Color_ForegroundSearch"] = Colors.White;
                Application.Current.Resources["Color_BorderBursh"] = (Color)ColorConverter.ConvertFromString("#95DCED");-->

    <!--蓝色皮肤-->
    <!--<Color x:Key="Color_BackgroundTitle"  >#0288D1</Color>
    <Color x:Key="Color_BackgroundMain"  >#2BA2D2</Color>
    <Color x:Key="Color_BackgroundSide"  >#03A9F5</Color>
    <Color x:Key="Color_BackgroundTab"  >#0288D1</Color>
    <Color x:Key="Color_BackgroundSearch"  >#87CEEB</Color>
    <Color x:Key="Color_BackgroundMenu" >skyblue</Color>
    <Color x:Key="Color_ForegroundGlobal"  >white</Color>
    <Color x:Key="Color_ForegroundSearch"  >white</Color>
    <Color x:Key="Color_BorderBursh"  >#95DCED</Color>-->


    <SolidColorBrush x:Key="BackgroundTitle"  Color="{DynamicResource Color_BackgroundTitle}"/>
    <SolidColorBrush x:Key="BackgroundMain" Color="{DynamicResource Color_BackgroundMain}" />
    <SolidColorBrush x:Key="BackgroundSide"  Color="{DynamicResource Color_BackgroundSide}" />
    <SolidColorBrush x:Key="BackgroundTab"  Color="{DynamicResource Color_BackgroundTab}" />
    <SolidColorBrush x:Key="BackgroundSearch"  Color="{DynamicResource Color_BackgroundSearch}" />
    <SolidColorBrush x:Key="BackgroundMenu"  Color="{DynamicResource Color_BackgroundMenu}"/>
    <SolidColorBrush x:Key="ForegroundGlobal"  Color="{DynamicResource Color_ForegroundGlobal}" />
    <SolidColorBrush x:Key="ForegroundSearch"  Color="{DynamicResource Color_ForegroundSearch}" />
    <SolidColorBrush x:Key= "BorderBursh"  Color="{DynamicResource Color_BorderBursh}" />
    
    


    <Style x:Key="ToolsBarBorderStyle" TargetType="Border">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="CornerRadius" Value="3"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BackgroundSide}"/>
        <Setter Property="Background" Value="Transparent"/>

        <Setter Property="Background" Value="Transparent"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource BackgroundTitle}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ActorInfoBorderStyle" TargetType="Border">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="CornerRadius" Value="5"/>
        <Setter Property="Background" Value="Transparent"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard >
                        <Storyboard FillBehavior="HoldEnd" >
                            <ColorAnimation Duration="0:0:0.2"  Storyboard.TargetProperty="Background.Color" To="Gray" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard >
                            <ColorAnimation Duration="0:0:0.2"  Storyboard.TargetProperty="Background.Color" To="Transparent" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="BorderStyle" TargetType="Border">
        <Setter Property="Background" Value="Transparent"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource BackgroundTitle}"/>
                <!--<Trigger.EnterActions>
                    <BeginStoryboard >
                        <Storyboard FillBehavior="HoldEnd" >
                            <ColorAnimation Duration="0:0:0.2"  Storyboard.TargetProperty="Background.Color" To="Gray" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard >
                            <ColorAnimation Duration="0:0:0.2"  Storyboard.TargetProperty="Background.Color" To="Transparent" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>-->
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="GenreBorderStyle" TargetType="Border">
        <Setter Property="CornerRadius" Value="3"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BackgroundSide}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <!--<Setter Property="Background" Value="{DynamicResource BackgroundTitle}"/>-->
                <Setter Property="Background" Value="#EAFCFA"/>
                <Setter Property="BorderBrush" Value="#79DFD5"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CloseBorderStyle" TargetType="Border">
        <Setter Property="Background" Value="Transparent"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Red"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="GridCloseBorderStyle" TargetType="Border">
        <Setter Property="Margin" Value="5"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Width" Value="30"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="CornerRadius" Value="3"/>


        <Setter Property="Background" Value="Transparent"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard FillBehavior="HoldEnd">
                            <ColorAnimation Duration="0:0:0.2"  Storyboard.TargetProperty="Background.Color" To="Red" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard >
                            <ColorAnimation Duration="0:0:0.2"  Storyboard.TargetProperty="Background.Color" To="Transparent" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ReturnBorder" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource BackgroundMain}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Grid}},Path=IsMouseOver}" Value="True">
                <Setter Property="Opacity" Value="0.8"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Grid}},Path=IsMouseOver}" Value="False">
                <Setter Property="Opacity" Value="0.5"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DropBorderStyle" TargetType="Border">
        <Setter Property="AllowDrop" Value="True"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="CornerRadius" Value="5"/>
        <Setter Property="Margin" Value="20 0"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Background" Value="{DynamicResource BackgroundMain}"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <DrawingBrush Viewport="0,0,8,8" ViewportUnits="Absolute" TileMode="Tile">
                    <DrawingBrush.Drawing>
                        <DrawingGroup>
                            <GeometryDrawing Brush="{DynamicResource ForegroundSearch}">
                                <GeometryDrawing.Geometry>
                                    <GeometryGroup>
                                        <RectangleGeometry Rect="0,0,50,50" />
                                        <RectangleGeometry Rect="50,50,50,50" />
                                    </GeometryGroup>
                                </GeometryDrawing.Geometry>
                            </GeometryDrawing>
                        </DrawingGroup>
                    </DrawingBrush.Drawing>
                </DrawingBrush>
            </Setter.Value>
        </Setter>
    </Style>




    <Style x:Key="MultiLineTextBox" TargetType="TextBox" >
        <Setter Property="Background" Value="{DynamicResource BackgroundSide}"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundSearch}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ForegroundGlobal}"/>
        <Setter Property="CaretBrush" Value="{DynamicResource ForegroundSearch}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="AcceptsReturn" Value="True"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource ForegroundSearch}"/>
            </Trigger>
        </Style.Triggers>
    </Style>





   


</ResourceDictionary>